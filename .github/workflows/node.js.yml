# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI 14.x

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - uses: getong/mariadb-action@v1.1
      with:
        host port: 3306
        container port: 3306
        character set server: 'utf8'
        collation server: 'utf8_general_ci'
        mariadb version: '10.4.10'
        mysql database: 'mogakco'
        mysql root password: 'mogatest'
        mysql user: 'mogauser'
        mysql password: 'mogatest'

    - name: pwd
      run: pwd

    - name: is correct PROJECT_ENV PROJECT_ROOT?
      run: echo $PROJECT_ROOT

    - name: is correct PROJECT_ENV NEST?
      run: echo $NEST

    - name: is correct PROJECT_ENV NEXT?
      run: echo $NEXT

    - name: copy .env.example to nest directory
      run: cp .env.example nest/.env
      working-directory: ${{ env.PROJECT_ROOT }}

    - name: insall npm nest package dependencies
      run: npm ci
      working-directory: ${{ env.NEST }}

    - name: insall npm next package dependencies
      run: npm ci
      working-directory: ${{ env.NEXT }}

    - name: Testing Nest Unit Test
      run: npm run test:unit
      working-directory: ${{ env.NEST }}
      
    - name: Run Eslint Nest
      run: npm run lint
      working-directory: ${{ env.NEST }}

    - name: Run Eslint Next
      run: npm run lint
      working-directory: ${{ env.NEXT }}

    - name: Next Unit Test...
      run: npm run test:unit
      working-directory: ${{ env.NEXT }}
    
    env:
      PROJECT_ROOT: './mogakco'
      NEST: '.mogakco/nest'
      NEXT: '.mogakco/next'